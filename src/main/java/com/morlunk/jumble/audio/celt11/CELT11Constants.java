/*
 * Copyright (C) 2013 Andrew Comminos
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.morlunk.jumble.audio.celt11;

public interface CELT11Constants {
  public final static int CELT_OK = CELT11JNI.CELT_OK_get();
  public final static int CELT_BAD_ARG = CELT11JNI.CELT_BAD_ARG_get();
  public final static int CELT_INVALID_MODE = CELT11JNI.CELT_INVALID_MODE_get();
  public final static int CELT_INTERNAL_ERROR = CELT11JNI.CELT_INTERNAL_ERROR_get();
  public final static int CELT_CORRUPTED_DATA = CELT11JNI.CELT_CORRUPTED_DATA_get();
  public final static int CELT_UNIMPLEMENTED = CELT11JNI.CELT_UNIMPLEMENTED_get();
  public final static int CELT_INVALID_STATE = CELT11JNI.CELT_INVALID_STATE_get();
  public final static int CELT_ALLOC_FAIL = CELT11JNI.CELT_ALLOC_FAIL_get();
  public final static int CELT_GET_MODE_REQUEST = CELT11JNI.CELT_GET_MODE_REQUEST_get();
  public final static int CELT_SET_COMPLEXITY_REQUEST = CELT11JNI.CELT_SET_COMPLEXITY_REQUEST_get();
  public final static int CELT_SET_PREDICTION_REQUEST = CELT11JNI.CELT_SET_PREDICTION_REQUEST_get();
  public final static int CELT_SET_BITRATE_REQUEST = CELT11JNI.CELT_SET_BITRATE_REQUEST_get();
  public final static int CELT_RESET_STATE_REQUEST = CELT11JNI.CELT_RESET_STATE_REQUEST_get();
  public final static int CELT_RESET_STATE = CELT11JNI.CELT_RESET_STATE_get();
  public final static int CELT_SET_VBR_CONSTRAINT_REQUEST = CELT11JNI.CELT_SET_VBR_CONSTRAINT_REQUEST_get();
  public final static int CELT_SET_VBR_REQUEST = CELT11JNI.CELT_SET_VBR_REQUEST_get();
  public final static int CELT_SET_INPUT_CLIPPING_REQUEST = CELT11JNI.CELT_SET_INPUT_CLIPPING_REQUEST_get();
  public final static int CELT_SET_START_BAND_REQUEST = CELT11JNI.CELT_SET_START_BAND_REQUEST_get();
  public final static int CELT_SET_END_BAND_REQUEST = CELT11JNI.CELT_SET_END_BAND_REQUEST_get();
  public final static int CELT_SET_CHANNELS_REQUEST = CELT11JNI.CELT_SET_CHANNELS_REQUEST_get();
  public final static int CELT_GET_LOOKAHEAD = CELT11JNI.CELT_GET_LOOKAHEAD_get();
  public final static int CELT_GET_SAMPLE_RATE = CELT11JNI.CELT_GET_SAMPLE_RATE_get();
  public final static int CELT_GET_BITSTREAM_VERSION = CELT11JNI.CELT_GET_BITSTREAM_VERSION_get();
}
